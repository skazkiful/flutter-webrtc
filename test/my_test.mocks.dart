// Mocks generated by Mockito 5.0.16 from annotations
// in flutter_sandbox/test/my_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_sandbox/signaling.dart' as _i3;
import 'package:flutter_webrtc/flutter_webrtc.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMediaStream_0 extends _i1.Fake implements _i2.MediaStream {}

/// A class which mocks [Signaling].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignaling extends _i1.Mock implements _i3.Signaling {
  MockSignaling() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get selfId =>
      (super.noSuchMethod(Invocation.getter(#selfId), returnValue: '')
          as String);
  @override
  set selfId(String? _selfId) =>
      super.noSuchMethod(Invocation.setter(#selfId, _selfId),
          returnValueForMissingStub: null);
  @override
  set onSignalingStateChange(
          dynamic Function(_i3.SignalingState)? _onSignalingStateChange) =>
      super.noSuchMethod(
          Invocation.setter(#onSignalingStateChange, _onSignalingStateChange),
          returnValueForMissingStub: null);
  @override
  set onCallStateChange(
          dynamic Function(_i3.Session, _i3.CallState)? _onCallStateChange) =>
      super.noSuchMethod(
          Invocation.setter(#onCallStateChange, _onCallStateChange),
          returnValueForMissingStub: null);
  @override
  set onLocalStream(dynamic Function(_i2.MediaStream)? _onLocalStream) =>
      super.noSuchMethod(Invocation.setter(#onLocalStream, _onLocalStream),
          returnValueForMissingStub: null);
  @override
  set onAddRemoteStream(
          dynamic Function(_i3.Session, _i2.MediaStream)? _onAddRemoteStream) =>
      super.noSuchMethod(
          Invocation.setter(#onAddRemoteStream, _onAddRemoteStream),
          returnValueForMissingStub: null);
  @override
  set onRemoveRemoteStream(
          dynamic Function(_i3.Session, _i2.MediaStream)?
              _onRemoveRemoteStream) =>
      super.noSuchMethod(
          Invocation.setter(#onRemoveRemoteStream, _onRemoveRemoteStream),
          returnValueForMissingStub: null);
  @override
  set onPeersUpdate(dynamic Function(dynamic)? _onPeersUpdate) =>
      super.noSuchMethod(Invocation.setter(#onPeersUpdate, _onPeersUpdate),
          returnValueForMissingStub: null);
  @override
  set onDataChannelMessage(
          dynamic Function(
                  _i3.Session, _i2.RTCDataChannel, _i2.RTCDataChannelMessage)?
              _onDataChannelMessage) =>
      super.noSuchMethod(
          Invocation.setter(#onDataChannelMessage, _onDataChannelMessage),
          returnValueForMissingStub: null);
  @override
  set onDataChannel(
          dynamic Function(_i3.Session, _i2.RTCDataChannel)? _onDataChannel) =>
      super.noSuchMethod(Invocation.setter(#onDataChannel, _onDataChannel),
          returnValueForMissingStub: null);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  bool toggleMic() =>
      (super.noSuchMethod(Invocation.method(#toggleMic, []), returnValue: false)
          as bool);
  @override
  bool toggleCamera() =>
      (super.noSuchMethod(Invocation.method(#toggleCamera, []),
          returnValue: false) as bool);
  @override
  void invite(String? peerId) =>
      super.noSuchMethod(Invocation.method(#invite, [peerId]),
          returnValueForMissingStub: null);
  @override
  void bye(String? sessionId) =>
      super.noSuchMethod(Invocation.method(#bye, [sessionId]),
          returnValueForMissingStub: null);
  @override
  void ping() => super.noSuchMethod(Invocation.method(#ping, []),
      returnValueForMissingStub: null);
  @override
  void onMessage(dynamic message) =>
      super.noSuchMethod(Invocation.method(#onMessage, [message]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> connect() =>
      (super.noSuchMethod(Invocation.method(#connect, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.MediaStream> createStream() =>
      (super.noSuchMethod(Invocation.method(#createStream, []),
              returnValue: Future<_i2.MediaStream>.value(_FakeMediaStream_0()))
          as _i4.Future<_i2.MediaStream>);
  @override
  String toString() => super.toString();
}
